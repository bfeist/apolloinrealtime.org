user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    proxy_connect_timeout       28800;
    proxy_send_timeout          28800;
    proxy_read_timeout          28800;
    send_timeout                28800;

    #gzip  on;

    server {

        listen 443 ssl;
        listen [::]:443 ssl;
        server_name  nginx;

        ssl_certificate      /etc/pki/tls/certs/nginx.crt;
        ssl_certificate_key  /etc/pki/tls/private/nginx.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        client_max_body_size 50G;

        root /usr/share/nginx/html;

        #
        # Serve react app
        #
        location / {
            try_files $uri $uri/ /index.html;  # Rewrite all requests to index.html
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires max;
            log_not_found off;
        }

        # Optionally handle error pages
        error_page 404 /index.html;

        #
        # Serve express API container
        #
        location /api/v1/ {
            # rewrite /api/v1/(.*) /$1 break;
            proxy_pass http://express:5000/api/v1/;
            proxy_redirect off;
            proxy_buffering off;

            # if ($http_origin ~* /cors origin regex/) {
            #     add_header 'Access-Control-Allow-Origin' "$http_origin";
            #     add_header 'Access-Control-Allow-Credentials' 'false' always;
            #     add_header 'Access-Control-Allow-Methods' 'GET' always;
            # }

            # Stuff to add later
            #proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for

            # For websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        #
        # Serve static content
        #
        location /static {
            # Alias to container file system, which is a docker volume to the host system
            # defined by env var PUBLIC_STATIC_DIR
            alias /usr/share/nginx/static/;
            try_files $uri $uri/ =404;
        }

    }
}
